{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-01T14:45:01.858Z",
    "end": "2023-06-01T14:45:11.281Z",
    "duration": 9423,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "7325f522-6e50-4c87-b502-fc708a61e5f4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3181ea81-010c-4d33-80e5-443bf3ea2b46",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\Hp\\Desktop\\Echologyx QA Materials\\QA Automation\\NodeJS\\SeleniumDemo\\test\\2nddayTest.js",
          "file": "\\test\\2nddayTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"successfully adds a todo to application\"",
              "fullTitle": "add todo tests \"before each\" hook for \"successfully adds a todo to application\"",
              "timedOut": null,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": null,
              "context": null,
              "code": "driver = new Builder()\n.usingServer(gridUrl)\n.withCapabilities(ltCapability)\n.build();",
              "err": {
                "message": "TypeError: Target browser must be a string, but is <undefined>; did you forget to call forBrowser()?",
                "estack": "TypeError: Target browser must be a string, but is <undefined>; did you forget to call forBrowser()?\n    at Builder.build (node_modules\\selenium-webdriver\\index.js:599:13)\n    at Context.<anonymous> (test\\2nddayTest.js:29:6)\n    at process.processImmediate (node:internal/timers:476:21)",
                "diff": null
              },
              "uuid": "057b0239-fa06-4023-8e6f-64f87dcd20e3",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook for \"successfully adds a todo to application\"",
              "fullTitle": "add todo tests \"after each\" hook for \"successfully adds a todo to application\"",
              "timedOut": null,
              "duration": 5014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": null,
              "context": null,
              "code": "// delay some time\nawait new Promise(resolve => setTimeout(resolve, 5000));\n// Close the browser\nawait driver.quit();",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'quit')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'quit')\n    at Context.<anonymous> (test\\2nddayTest.js:36:18)",
                "diff": null
              },
              "uuid": "012a70b8-6e6e-4cdc-8adc-dfa4b6d870f8",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// delay the time\n// const delay=(time)=>{\n//     setTimeout(async () =>{\n//         await driver.quit();\n//     },time)\n// }\n// launch browser individually\n// let driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add to do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// delay & close the browser\n// await delay(10000);.\n// await new Promise(resolve => setTimeout(resolve, 5000));\n// setTimeout(async () => {\n  // await driver.quit();\n// }, 3000);",
              "err": {},
              "uuid": "3345801a-7150-4082-986a-853e15070262",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// delay the time\n// const delay=(time)=>{\n//     setTimeout(async () =>{\n//         await driver.quit();\n//     },time)\n// }\n// launch browser individually\n// let driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add to do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn JavaScript\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn JavaScript\");\n// delay & close the browser\n// await delay(10000);.\n// await new Promise(resolve => setTimeout(resolve, 5000));\n// setTimeout(async () => {\n  // await driver.quit();\n// }, 3000);",
              "err": {},
              "uuid": "87b47f29-e267-4f71-9a50-86df40d37699",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3345801a-7150-4082-986a-853e15070262",
            "87b47f29-e267-4f71-9a50-86df40d37699"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "83992cbc-1a27-420f-859a-697b21b56595",
          "title": "add todo 2nd tests",
          "fullFile": "C:\\Users\\Hp\\Desktop\\Echologyx QA Materials\\QA Automation\\NodeJS\\SeleniumDemo\\test\\2nddayTest2.js",
          "file": "\\test\\2nddayTest2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add todo 2nd tests Adding a new test for reporting",
              "timedOut": null,
              "duration": 9069,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// delay the time\n// const delay=(time)=>{\n//     setTimeout(async () =>{\n//         await driver.quit();\n//     },time)\n// }\n// launch browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add to do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// delay & close the browser\n// await delay(10000);.\nawait new Promise(resolve => setTimeout(resolve, 5000));\n\n  //  setTimeout(async () => {\nawait driver.quit();\n// }, 3000);",
              "err": {},
              "uuid": "bbb6df78-2f85-4999-97aa-62da33898f71",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb6df78-2f85-4999-97aa-62da33898f71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9069,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testsResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "c:/Users/Hp/Desktop/Echologyx QA Materials/QA Automation/NodeJS/SeleniumDemo/testsReports",
        "reportFilename": "testsResults"
      },
      "version": "6.2.0"
    }
  }
}