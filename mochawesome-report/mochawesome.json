{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2023-05-31T11:37:00.761Z",
    "end": "2023-05-31T11:37:11.732Z",
    "duration": 10971,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0335c85a-5fec-4a1c-a05e-a38f6eb7aea1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2144878a-b3c4-49d9-8633-baee72e4f840",
          "title": "add todo 2nd tests",
          "fullFile": "C:\\Users\\Hp\\Desktop\\Echologyx QA Materials\\QA Automation\\NodeJS\\SeleniumDemo\\test\\2nddayTest2.js",
          "file": "\\test\\2nddayTest2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adding a new test for reporting",
              "fullTitle": "add todo 2nd tests Adding a new test for reporting",
              "timedOut": null,
              "duration": 3805,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// delay the time\n// const delay=(time)=>{\n//     setTimeout(async () =>{\n//         await driver.quit();\n//     },time)\n// }\n// launch browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add to do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Seleniumo\");\n// delay & close the browser\n// await delay(10000);.\nawait new Promise(resolve => setTimeout(resolve, 5000));\n\n  //  setTimeout(async () => {\nawait driver.quit();\n// }, 3000);",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn Seleniumo'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn Seleniumo'\n    at Context.<anonymous> (test\\2nddayTest2.js:37:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Learn Selenium\n+ Learn Seleniumo\n"
              },
              "uuid": "e0243e9f-f33a-4349-8357-1a1ec3e9abd7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e0243e9f-f33a-4349-8357-1a1ec3e9abd7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3805,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "760bf584-e0a8-474f-a097-f7da712fa74c",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\Hp\\Desktop\\Echologyx QA Materials\\QA Automation\\NodeJS\\SeleniumDemo\\test\\2nddayTest.js",
          "file": "\\test\\2nddayTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 10487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// delay the time\n// const delay=(time)=>{\n//     setTimeout(async () =>{\n//         await driver.quit();\n//     },time)\n// }\n// launch browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add to do\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// delay & close the browser\n// await delay(10000);.\nawait new Promise(resolve => setTimeout(resolve, 5000));\n// setTimeout(async () => {\n  await driver.quit();\n// }, 3000);",
              "err": {},
              "uuid": "b6a1ef51-c32c-4fb2-8ccc-956fe0a6fe98",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6a1ef51-c32c-4fb2-8ccc-956fe0a6fe98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10487,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}